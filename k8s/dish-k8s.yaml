# DiSh Job Kubernetes Deployment
# Single file containing all necessary resources - simplified approach

---
apiVersion: v1
kind: Namespace
metadata:
  name: dish-system

---
apiVersion: v1
kind: Secret
metadata:
  name: dish-secrets
  namespace: dish-system
type: Opaque
stringData:
  # Replace with your actual tokens
  shopify-pat: "your-shopify-pat-token-here"
  bloomreach-token: "your-bloomreach-api-token-here"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dish-config
  namespace: dish-system
data:
  # Store configuration - replace with your values
  shopify-url: "your-store.myshopify.com"
  br-environment: "production"  # or "staging"
  br-account-id: "1234"
  br-catalog-name: "your-catalog"

  # Optional settings (matches docker-compose.yml defaults)
  log-level: "INFO"
  auto-index: "true"
  multi-market: "false"
  market-cache-enabled: "true"
  container-retention-days: "7"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dish-storage
  namespace: dish-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# API Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dish-api
  namespace: dish-system
  labels:
    app: dish-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dish-api
  template:
    metadata:
      labels:
        app: dish-api
    spec:
      containers:
        - name: dish-api
          image: dish-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081

          # Resource limits (matches docker-compose defaults)
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"

          # Environment variables (matches docker-compose.yml)
          env:
            - name: DOCKER_IMAGE_TAG
              value: "dish-job:latest"
            - name: DOCKER_EXPORT_PATH
              value: "/export"
            - name: DOCKER_HOST_PATH
              value: "/export"
            - name: DOCKER_MAX_CONNECTIONS
              value: "20"
            - name: DOCKER_CONNECTION_TIMEOUT
              value: "30"
            - name: DOCKER_RESPONSE_TIMEOUT
              value: "45"
            - name: DOCKER_LOG_TIMEOUT
              value: "3000"
            - name: DOCKER_CONTAINER_RETENTION_DAYS
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: container-retention-days
            - name: DISH_SECURITY_ENABLED
              value: "true"
            - name: DISH_SECURITY_ACCESS_TOKEN
              value: "dish-secret-token-change-me-123"  # CHANGE THIS!
            - name: DISH_DELTA_TRACKER_FILE
              value: "./delta-job-tracker.json"
            - name: DISH_CONTAINER_CLEANUP_CRON
              value: "0 0 2 * * ?"
            - name: DOCKER_MARKET_CACHE_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: market-cache-enabled
            - name: DOCKER_MARKET_CACHE_MAX_AGE_HOURS
              value: "24"
            - name: SERVER_PORT
              value: "8081"
            - name: LOGGING_LEVEL_COM_BLOOMREACH
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: log-level

          # Storage mount
          volumeMounts:
            - name: export-volume
              mountPath: /export

          # Health check
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10

      volumes:
        - name: export-volume
          persistentVolumeClaim:
            claimName: dish-storage

---
# Service for API Server
apiVersion: v1
kind: Service
metadata:
  name: dish-api-service
  namespace: dish-system
  labels:
    app: dish-api
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
  selector:
    app: dish-api

---
# Job Template for Manual Full Feed (create jobs from this template)
apiVersion: batch/v1
kind: Job
metadata:
  name: dish-full-feed-template
  namespace: dish-system
  labels:
    app: dish-job
    type: full-feed
spec:
  ttlSecondsAfterFinished: 86400  # Auto-delete after 24 hours
  backoffLimit: 2
  activeDeadlineSeconds: 7200  # 2 hour timeout
  template:
    metadata:
      labels:
        app: dish-job
        type: full-feed
    spec:
      restartPolicy: Never
      containers:
        - name: dish-job
          image: dish-job:latest
          imagePullPolicy: IfNotPresent

          # Resource limits (matches docker-compose behavior)
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "1000m"

          # Environment variables from ConfigMap and Secret
          env:
            - name: SHOPIFY_URL
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: shopify-url
            - name: BR_ENVIRONMENT_NAME
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: br-environment
            - name: BR_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: br-account-id
            - name: BR_CATALOG_NAME
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: br-catalog-name
            - name: LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: log-level
            - name: AUTO_INDEX
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: auto-index
            - name: BR_MULTI_MARKET
              valueFrom:
                configMapKeyRef:
                  name: dish-config
                  key: multi-market
            - name: SHOPIFY_PAT
              valueFrom:
                secretKeyRef:
                  name: dish-secrets
                  key: shopify-pat
            - name: BR_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dish-secrets
                  key: bloomreach-token
            - name: BR_OUTPUT_DIR
              value: "/export"
            - name: DELTA_MODE
              value: "false"

          volumeMounts:
            - name: export-volume
              mountPath: /export

      volumes:
        - name: export-volume
          persistentVolumeClaim:
            claimName: dish-storage